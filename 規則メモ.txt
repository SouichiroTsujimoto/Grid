_自分用のメモ_

<...> <- 必須
[...] <- 必須ではない
{...} <- 繰り返し

[if式]
<ifex> <条件式> <:> <式> <:> <式>

[if文]

<if> <条件式> <do>
  <文>
[
<elif> <do>
  <文>
]
[
<else>
  <文>
<end>
]

[def文]
<def> <返り値の型> <関数名> <(> [ { <引数の型> <引数名> } ] <)> <do>
  <文>
  <return> <値>
<end>

[変数]
<型> <名前> [ <=> <値> ]

# 基本的に再代入は禁止 #
# 初期化していない場合は自動でデフォルト値が代入される #

[配列]
<\{> [ <値> { <,> <値> } ] <\}>

[添字]
<配列> <[> <整数> <]>

[for文]
<for> <型> <変数名> <<-> <配列> <do>
  <文>
<end>

[パイプライン演算子]
<値> { < |> > <関数> [ { (引数) } ] }

# 値は関数の第一引数になる #

[map関数]
<map> <(> <配列> <,> <関数> <)>

# 配列の要素は関数の第一引数になる #
# 第二引数の関数が返す値は、引数の配列の要素と同じ型でないとエラー #

[mut文]
<mut> <型> <変数名> <=> <値> <do>
  <文>
<end>

[&演算子]
<配列> <&> <配列>

# 配列の結合 #

[$式]
<$> <値>

# 値をstringに変換 #

[前置演算子]
<`> <中置演算子> <`> <(> <引数> <)>

[include]
<include> <ファイルパス>

[コメント]
</*> <文字列> <*/>

# 複数行に渡ってコメント化することができる #
# 単一行コメントは未実装 #
# コメント終了記号がない場合はエラー #

[コンパイラオプション]
<ka23> { [オプション] } [ファイル名] { [オプション] }

# (例) ka23 main.ka23 -ast #
# オプションは頭に'-'を付けないとエラー #

[型]
int
float
char
string
bool

[型の表現]
# 例 #
def string a(int x, float y) do ...
↓
"INT+FLOAT->STRING"

  [型変数]
  <@> <名前>
  
  [型候補]
  <型名> <|> <型名> { [ <|> <型名> ] }


[コンパイラオプション]
-ast    : 生成したASTを画面に出力
-o      : 生成するファイル名を指定
-en     : 未実装
-jp     : 未実装